#!/bin/bash

# Paths and Variables
USB_DRIVE="/dev/sdX"        # Replace with your USB device (e.g., sdb)
MOUNT_POINT="/u/usb_installer"
ISO_DIR="/path/to/iso/" # Directory containing your ISO files
GRUB_CFG="$MOUNT_POINT/boot/grub/grub.cfg"
ISO_DEST="$MOUNT_POINT/boot/isos"

# Step 1: Run Link Manager
echo "Running the link manager to set up configuration links..."
$LINK_MANAGER_SCRIPT process
if [[ $? -ne 0 ]]; then
    echo "Error: Link manager failed. Aborting."
    exit 1
fi

# Step 2: Partition the USB Drive with GPT
echo "Partitioning the USB drive with GPT..."
parted $USB_DRIVE --script mklabel gpt
parted $USB_DRIVE --script mkpart primary fat32 1MiB 100%
parted $USB_DRIVE --script set 1 boot on

# Step 3: Format the Partition
echo "Formatting the USB partition as FAT32..."
mkfs.fat -F32 "${USB_DRIVE}1"

# Step 4: Mount the USB Drive
echo "Mounting the USB drive..."
mkdir -p $MOUNT_POINT
mount "${USB_DRIVE}1" $MOUNT_POINT

# Step 5: Install GRUB
echo "Installing GRUB..."
grub-install --target=x86_64-efi --efi-directory=$MOUNT_POINT --boot-directory=$MOUNT_POINT/boot --removable

# Step 6: Copy ISO Files
echo "Copying ISO files..."
mkdir -p $ISO_DEST
cp $ISO_DIR/*.iso $ISO_DEST

# Step 7: Configure GRUB
echo "Configuring GRUB..."
mkdir -p "$(dirname "$GRUB_CFG")"
cat > "$GRUB_CFG" << 'EOF'
set timeout=10
set default=0

# Loop through available ISO files
for isofile in ($root)/boot/isos/*.iso; do
    set filename="${isofile##*/}" # Extract filename from the path
    menuentry "Boot $filename" {
        loopback loop $isofile
        linux (loop)/boot/vmlinuz img_dev=$isofile img_loop=$isofile
        initrd (loop)/boot/initrd
    }
done
EOF

# Finalize
echo "Syncing data and unmounting USB drive..."
sync
umount $MOUNT_POINT

echo "USB drive is ready for booting ISOs!"
